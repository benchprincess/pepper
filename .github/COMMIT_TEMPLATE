## 📑 프로젝트 규칙
[Branch Strategy]
- main / dev 브랜치 기본 생성
- main으로 직접 push 제한
- PR 전 최소 1인 이상 승인 필수


[Git Convention]
- 적절한 커밋 접두사 작성
- 커밋 메시지 내용 작성
- 내용 뒤에 이슈 (#이슈 번호)와 같이 작성하여 이슈 연결

 > Feat : 새로운 기능 구현
 > WIP : 개발 중
 > Fix : 버그 수정
 > Docs : 문서 추가 및 수정
 > Style :	스타일링 작업 및 포맷팅 변경
 > Refactor :	코드 리팩토링 (동작 변경 없음)
 > Test :	테스트 관련
 > Deploy : 배포 관련
 > Delete : 코드 또는 파일 제거
 > Conf :	빌드, 환경 설정
 > Hotfix : 긴급 수정
 > Chore :	기타 작업


[Pull Request]
Title
제목은 '[FEAT] 로그인  구현'과 같이 작성.

 > <PR Type>
 > FEAT: 새로운 기능 구현
 > WIP : 에셋 파일 추가
 > FIX: 버그 수정
 > DOCS: 문서 추가 및 수정
 > STYLE: 포맷팅 변경
 > REFACTOR: 코드 리팩토링
 > TEST: 테스트 관련
 > DEPLOY: 배포 관련
 > DELETE: 코드 또는 파일 제거
 > CONF: 빌드, 환경 설정
 > HOTFIX: 긴급 수정
 > CHORE: 기타 작업


[Description]
구체적인 작업 내용을 작성해주세요.
이미지를 별도로 첨부하면 더 좋습니다 👍


[Code Convention]
<BE>

 > 패키지명 전체 소문자
 > 클래스명, 인터페이스명 CamelCase
 > 클래스 이름 명사 사용
 > 상수명 SNAKE_CASE
 > Controller, Service, Dto, Repository, mapper 앞에 접미사로 통일(ex. MemberController)
 > service 계층 메서드명 create, update, find, delete로 CRUD 통일(ex. createMember)
 > Test 클래스는 접미사로 Test 사용(ex. memberFindTest)